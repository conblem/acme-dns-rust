name: Rust
on:
  push:
    paths-ignore:
      - "cross/**"
    branches:
      - dev
    pull_request:
      branches:
        - "**"
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: docker/setup-buildx-action@v1
      - uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - run: docker pull ghcr.io/conblem/musl-openssl
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-build-${{ hashFiles('**/Cargo.lock') }}
      - uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --target x86_64-unknown-linux-musl --release
      # improve in the future as soon as audit passes again
      - uses: actions-rs/audit-check@v1
        continue-on-error: true
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - uses: docker/build-push-action@v2
        with:
          push: true
          tags: ghcr.io/conblem/acme-dns-latest:${{ github.sha }}
          context: ./
  clippy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-clippy-${{ hashFiles('**/Cargo.lock') }}
      - name: Annotate commit with clippy warnings
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all-features
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - macos-latest
          #- windows-latest
          - ubuntu-latest
        toolchain: [ stable, nightly ]
        include:
          - os: ubuntu-latest
            toolchain: stable
            coverage: true
    steps:
      - uses: actions/checkout@v2
      - name: install openssl on windows
        run:  |
          vcpkg install openssl:x64-windows-static-md
          vcpkg integrate install
        if: ${{ matrix.os == 'windows-latest' }}
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.toolchain }}
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ matrix.os }}-${{ matrix.toolchain }}-coverage--${{ hashFiles('**/Cargo.lock') }}
      - uses: actions-rs/cargo@v1
        if: ${{ !matrix.coverage }}
        with:
          command: test
          args: --features disable-docker
      - uses: actions-rs/tarpaulin@v0.1
        if: ${{ matrix.coverage }}
        with:
          args: "--skip-clean --avoid-cfg-tarpaulin"
      - uses: codecov/codecov-action@v1
        if: ${{ matrix.coverage }}
        with:
          fail_ci_if_error: true
  fmt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: -- --check
